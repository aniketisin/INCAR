/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package incar;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.awt.Rectangle;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.BorderLayout;
import java.io.*;
/**
 *
 * @author aniket
 */
public class DataDisplay extends javax.swing.JFrame {

    /**
     * Creates new form DataDisplay
     */
    int cnt;
    MainPanel parent;
    public DataDisplay(MainPanel par, int counter) {
        parent = par;
        initComponents();
        GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
        GraphicsDevice defaultScreen = ge.getDefaultScreenDevice();
        Rectangle rect = defaultScreen.getDefaultConfiguration().getBounds();
        int x = (int) rect.getMaxX() - this.getWidth();
        int y = 0;
        this.setLocation(x, y);
        this.addWindowListener(new DataDisplay.ApplicationCloser());
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        this.getContentPane().setLayout(new BorderLayout());
        this.getContentPane().add(jTabbedPane1, BorderLayout.NORTH);
        cnt = counter;
        read();
    }
    
    class ApplicationCloser extends WindowAdapter {
        @Override
        public void windowClosing(WindowEvent e) {
            parent.Reset1(cnt);
            return;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Base Pairs", "Water Mediated Pairs", "Bifurcated Pairs", "Bifurcated Triplets"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(530, 330));

        jButton1.setText("Display All");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Download");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Base Pairs", "Water Mediated Pairs", "Bifurcated Pairs", "Bifurcated Triplets"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setMinWidth(60);
            jTable2.getColumnModel().getColumn(1).setMinWidth(60);
            jTable2.getColumnModel().getColumn(2).setMinWidth(60);
            jTable2.getColumnModel().getColumn(3).setMinWidth(60);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 752, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 478, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Classification", jPanel1);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "H Bond", "Donor No.", "Atom", "Residue Type", "Residue No.", "Chain", "Acceptor No.", "Atom", "Residue Type", "Residue No.", "Chain", "Distance of Donor", "Distance of Hydrogen", "Angle DHA", "Bond Type", "Sub Type", "Torsion"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable3MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable3);
        if (jTable3.getColumnModel().getColumnCount() > 0) {
            jTable3.getColumnModel().getColumn(0).setMinWidth(60);
            jTable3.getColumnModel().getColumn(1).setMinWidth(60);
            jTable3.getColumnModel().getColumn(2).setMinWidth(60);
            jTable3.getColumnModel().getColumn(3).setMinWidth(60);
            jTable3.getColumnModel().getColumn(4).setMinWidth(60);
            jTable3.getColumnModel().getColumn(5).setMinWidth(60);
            jTable3.getColumnModel().getColumn(6).setMinWidth(60);
            jTable3.getColumnModel().getColumn(7).setMinWidth(60);
            jTable3.getColumnModel().getColumn(8).setMinWidth(60);
            jTable3.getColumnModel().getColumn(9).setMinWidth(60);
            jTable3.getColumnModel().getColumn(10).setMinWidth(60);
            jTable3.getColumnModel().getColumn(11).setMinWidth(60);
            jTable3.getColumnModel().getColumn(12).setMinWidth(60);
            jTable3.getColumnModel().getColumn(13).setMinWidth(60);
            jTable3.getColumnModel().getColumn(14).setMinWidth(60);
            jTable3.getColumnModel().getColumn(15).setMinWidth(60);
            jTable3.getColumnModel().getColumn(16).setMinWidth(60);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 752, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 478, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("HBond Analysis", jPanel2);

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No. 1", "Type 1", "Ring 1", "Chain 1", "No. 2", "Type 2", "Ring 2", "Chain 2", "Distance", "Shift", "Slide", "Rise", "Roll", "Tilt", "Twist"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable4MouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(jTable4);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 752, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 478, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING))
        );

        jTabbedPane1.addTab("Stacks", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jButton1)
                .addGap(41, 41, 41)
                .addComponent(jButton2))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        parent.DisplayAll(cnt);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        jFileChooser1.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        jFileChooser1.setAcceptAllFileFilterUsed(false);
        int r = jFileChooser1.showOpenDialog(this);
        String loc = getClass().getProtectionDomain().getCodeSource().getLocation().toString();
        loc = loc.substring(5,loc.length()-10);
        loc += "/../src/tmp/";
        if(r == JFileChooser.APPROVE_OPTION)
        {
            String l = jFileChooser1.getSelectedFile().toString();
            try
            {
                Process process_0 = new ProcessBuilder(new String[]{"/bin/bash","-c","cp " + loc + "*" + cnt + ".txt " + l}).start();
                process_0.waitFor();
            }
            catch(Exception ex)
            {
                System.out.print(ex);
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        // TODO add your handling code here:
        int row = jTable2.rowAtPoint(evt.getPoint());
        int col = jTable2.columnAtPoint(evt.getPoint());
        if(row >= 0 && col >= 0)
        {
            //System.out.println(jTable1.getValueAt(row, col).toString());
            String[] s = jTable2.getValueAt(row, col).toString().split(" ");
            String t = jTable2.getValueAt(row, col).toString();
            int[] arr = new int[10];
            int sz=2;
            if(col==0)
            {
                arr[0] = Integer.parseInt(s[0].substring(0,s[0].length()-1));
                arr[1] = Integer.parseInt(s[1].substring(0,s[1].length()-1));
            }
            else if(col==1)
            {
                arr[0] = Integer.parseInt(s[1]);
                arr[1] = Integer.parseInt(s[4]);
            }
            else if(col==2)
            {
                arr[0] = Integer.parseInt(s[1].substring(0,s[1].length()-1));
                arr[1] = Integer.parseInt(s[2].substring(0,s[2].length()-1));
            }
            else if(col==3)
            {
                sz++;
                if(t.startsWith("D--H-AA") || t.startsWith("D-HH-AA"))
                {
                    arr[0] = Integer.parseInt(s[1].substring(0,s[1].length()-1));
                    arr[1] = Integer.parseInt(s[2].substring(0,s[2].length()-1));
                    arr[2] = Integer.parseInt(s[4].substring(0,s[4].length()-1));
                }
                if(t.startsWith("DD-HH-A"))
                {
                    arr[0] = Integer.parseInt(s[1].substring(0,s[1].length()-1));
                    arr[1] = Integer.parseInt(s[3].substring(0,s[3].length()-1));
                    arr[2] = Integer.parseInt(s[4].substring(0,s[4].length()-1));
                }
                if(t.startsWith("D-H-A-D"))
                {
                    arr[0] = Integer.parseInt(s[1].substring(0,s[1].length()-1));
                    arr[1] = Integer.parseInt(s[2].substring(0,s[2].length()-1));
                    arr[2] = Integer.parseInt(s[3].substring(0,s[3].length()-1));
                }
            }
            //System.out.print(s[1]);
            //System.out.print(s[2]);
            //System.out.print(s[4]);
            parent.Zoom(cnt,sz,arr);
        }
    }//GEN-LAST:event_jTable2MouseClicked

    private void jTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable3MouseClicked
        // TODO add your handling code here:
        int row = jTable3.rowAtPoint(evt.getPoint());
        int col = jTable3.columnAtPoint(evt.getPoint());
        if(row >= 0 && col >= 0)
        {
            //System.out.println(jTable1.getValueAt(row, col).toString());
            int[] arr = new int[10];
            arr[0] = Integer.parseInt(jTable3.getValueAt(row,4).toString());
            arr[1] = Integer.parseInt(jTable3.getValueAt(row,9).toString());
            int sz=2;
            parent.Zoom(cnt,sz,arr);
        }
    }//GEN-LAST:event_jTable3MouseClicked

    private void jTable4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable4MouseClicked
        // TODO add your handling code here:
        int row = jTable4.rowAtPoint(evt.getPoint());
        int col = jTable4.columnAtPoint(evt.getPoint());
        if(row >= 0 && col >= 0)
        {
            //System.out.println(jTable1.getValueAt(row, col).toString());
            int[] arr = new int[10];
            arr[0] = Integer.parseInt(jTable4.getValueAt(row,0).toString());
            arr[1] = Integer.parseInt(jTable4.getValueAt(row,4).toString());
            int sz=2;
            parent.Zoom(cnt,sz,arr);
        }
    }//GEN-LAST:event_jTable4MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DataDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DataDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DataDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DataDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                //new DataDisplay((MainPanel)args[0],Integer.parseInt(args[1])).setVisible(true);
            }
        });
    }
    
    public void read()
    {
        String loc = getClass().getProtectionDomain().getCodeSource().getLocation().toString();
        loc = loc.substring(5,loc.length()-10);
        loc = loc + "/../src/tmp/";
        System.out.println(loc);
        BufferedReader r1,r2,r3,r4,r5;
        try
        {
           System.out.println("opened");
           r1 = new BufferedReader(new FileReader(loc + "basepairs_" + Integer.toString(cnt) + ".txt"));
           r2 = new BufferedReader(new FileReader(loc + "watermediated_" + Integer.toString(cnt) + ".txt"));
           r3 = new BufferedReader(new FileReader(loc + "bifurcated_pairs_" + Integer.toString(cnt) + ".txt"));
           r4 = new BufferedReader(new FileReader(loc + "bifurcated_triplets_" + Integer.toString(cnt) + ".txt"));
           //r5 = new BufferedReader(new FileReader(loc + "stacked_bases_" + Integer.toString(cnt)));
           String l1 = r1.readLine();
           String l2 = r2.readLine();
           String l3 = r3.readLine();
           String l4 = r4.readLine();
           //String l5 = r5.readLine();
           while(true)
           {
                l1=r1.readLine();
                l2=r2.readLine();
                l3=r3.readLine();
                l4=r4.readLine();
                //l5=r5.readLine();
                if(l1==null && l2==null && l3==null && l4==null)
                    break;
                Object[] row = {l1,l2,l3,l4};
                javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) jTable2.getModel();
                model.addRow(row);
           }
        }
        catch(Exception ex)
        {
            System.out.print(ex);
        }
    }

    public void showHBOND(String a)
    {
        try{
            BufferedReader r = new BufferedReader(new FileReader(a));
            String y;
            int discard = 0;
            while((y = r.readLine()) != null)
            {
                //System.out.print(y);
                if(y.isEmpty())continue;
                if(discard < 2){discard++; continue;}
                //System.out.print(y);
                String[] x = y.split("\\s+");
                Object[] row = x;
                javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) jTable3.getModel();
                model.addRow(row);
                
                //System.out.println(cmd);
            }
        }
        catch(Exception ex)
        {
            System.out.print(ex);
        }
    }
    
    public void showStacks(String a)
    {
        try{
            BufferedReader r = new BufferedReader(new FileReader(a));
            String y;
            int discard = 0;
            while((y = r.readLine()) != null)
            {
                //System.out.print(y);
                if(y.isEmpty())continue;
                if(discard < 1){discard++; continue;}
                //System.out.print(y);
                String[] x = y.split("\\s+");
                Object[] row = x;
                javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) jTable4.getModel();
                model.addRow(row);
                
                //System.out.println(cmd);
            }
        }
        catch(Exception ex)
        {
            System.out.print(ex);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    // End of variables declaration//GEN-END:variables
}
